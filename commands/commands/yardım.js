const { ActionRowBuilder, SelectMenuBuilder, EmbedBuilder, ButtonBuilder, ButtonStyle } = require("discord.js");
const { SlashCommandBuilder } = require('@discordjs/builders');
const data = new SlashCommandBuilder()
    .setName('helpp')
    .setDescription("YardÄ±m komutunu gÃ¶sterir.");
module.exports.execute = async (client, interaction, db) => {

    const row = new ActionRowBuilder()
			.addComponents(
				new SelectMenuBuilder()
					.setCustomId('help_menu')
					.setPlaceholder('HiÃ§bir ÅŸey seÃ§ilmedi')
					.addOptions(
                        {
							label: 'Bot MenÃ¼sÃ¼',
							description: 'Bot ile ilgili yardÄ±m menÃ¼sÃ¼nÃ¼ gÃ¶sterir.',
                            emoji: "ğŸ¤–",
							value: 'second_option',
						},
						{
							label: 'Koruma MenÃ¼sÃ¼',
							description: 'Koruma ile ilgili yardÄ±m menÃ¼sÃ¼nÃ¼ gÃ¶sterir.',
                            emoji: "ğŸ¦¾",
							value: 'first_option',
						},
						{
							label: 'KullanÄ±cÄ± MenÃ¼sÃ¼',
							description: 'KullanÄ±cÄ± ile ilgili yardÄ±m menÃ¼sÃ¼nÃ¼ gÃ¶sterir.',
                            emoji: "ğŸ‘¥",
							value: 'third_option',
						},
					),
			);


    const embed = new EmbedBuilder()
        .setColor("#5865F2")
        .setTitle(`${client.user.username} - YardÄ±m MenÃ¼sÃ¼!`)
        .setThumbnail(client.user.displayAvatarURL({ dynamic: true }))
        .addFields(
            { name: '/ban korumasÄ±', value: 'SaÄŸ tÄ±k ban korumasÄ± sistemini ayarlar.', inline: true },
            { name: '/bot korumasÄ±', value: 'Bot korumasÄ± sistemini ayarlar.', inline: true },
            { name: '/bot-korumasÄ± izni', value: 'BotlarÄ± beyaz veya kara listeye ekler.', inline: true },
            { name: '/hesap korumasÄ±', value: 'Hesap korumasÄ± sistemini ayarlar.', inline: true },
            { name: '/kanal korumasÄ±', value: 'Kanal korumasÄ± sistemini ayarlar.', inline: true },
            { name: '/kick korumasÄ±', value: 'SaÄŸ tÄ±k kick korumasÄ± sistemini ayarlar.', inline: true },
            { name: '/koruma', value: 'koruma sistemlerini ayarlar.', inline: true },
            { name: '/rol-korumasÄ±', value: 'Rol korumasÄ± sistemini ayarlar.', inline: true },
            { name: '/yÃ¶netici korumasÄ±', value: 'YÃ¶netici korumasÄ± sistemini ayarlar.', inline: true },
            { name: '/yÃ¶netici-rol korumasÄ±', value: 'YÃ¶netici rol korumasÄ± sistemini ayarlarsÄ±nÄ±z.', inline: true },
            { name: '/emoji korumasÄ±', value: 'Emoji korumasÄ± sistemini ayarlarsÄ±nÄ±z.', inline: true },
        )
        .setFooter({ text: `${interaction.user.tag} tarafÄ±ndan istendi.`, iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })
        .setTimestamp()

     interaction.reply({ embeds: [embed], components: [row] });

};
module.exports.options = {
    ...data.toJSON()
};


module.exports.config = {
    enabled: true,
};